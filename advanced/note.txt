Advanced JavaScript

1. Scopã„·
: Regions
- Valid scope for referencing variables
- The valid scope of an identifier (variable, function, class) is determined by where it is declared
>> The valid scope is determined by where it is declared.

{
 A variable inside a block is valid only within the block 
}

ex)
{
    a //only available in this block
}
a // (not able to use)
>> Variables should be defined where they are needed

* Why do we need 'scope' ?
>> For avoiding name collisions, and saving memory


2. Garbage Collection
C >> Developer has too organize memory(memory leak)
C#, GO, Java, JavaScript >> Garbage Collector(GC) do this!

let apple = { 
    name : 'apple', //heap, 0x01
}

let orange = apple; // 0x01 >> point same address
orange = null; // null
apple = null; // null

AT THAT TIME!!!!!!!
When nothing is referencing the object, GC is appearncing >> clean Garbage
"Background Process"

